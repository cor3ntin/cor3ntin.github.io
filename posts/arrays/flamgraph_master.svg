<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Initializing a large array with Clang</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (10 samples, 0.02%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(238,165,15)" rx="2" ry="2" />
<text  x="1192.81" y="527.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckExplicitInitList (12,657 samples, 20.30%)</title><rect x="288.2" y="197" width="239.6" height="15.0" fill="rgb(211,49,10)" rx="2" ry="2" />
<text  x="291.21" y="207.5" >clang-10!(anonymous namespace):..</text>
</g>
<g >
<title>clang-10!clang::ImplicitConversionSequence::ImplicitConversionSequence (424 samples, 0.68%)</title><rect x="474.4" y="85" width="8.0" height="15.0" fill="rgb(238,206,4)" rx="2" ry="2" />
<text  x="477.40" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::OverloadCandidateSet::destroyCandidates (200 samples, 0.32%)</title><rect x="498.8" y="117" width="3.8" height="15.0" fill="rgb(234,81,40)" rx="2" ry="2" />
<text  x="501.78" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::StandardConversionSequence::setAsIdentityConversion (24 samples, 0.04%)</title><rect x="784.4" y="101" width="0.5" height="15.0" fill="rgb(236,118,32)" rx="2" ry="2" />
<text  x="787.42" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::EvaluatedExprVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker&gt;::VisitStmt (1,196 samples, 1.92%)</title><rect x="1167.2" y="165" width="22.6" height="15.0" fill="rgb(240,66,27)" rx="2" ry="2" />
<text  x="1170.18" y="175.5" >c..</text>
</g>
<g >
<title>clang-10!clang::ParseAST (62,339 samples, 99.98%)</title><rect x="10.0" y="389" width="1179.8" height="15.0" fill="rgb(221,81,41)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >clang-10!clang::ParseAST</text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (8 samples, 0.01%)</title><rect x="99.0" y="213" width="0.1" height="15.0" fill="rgb(218,197,53)" rx="2" ry="2" />
<text  x="101.96" y="223.5" ></text>
</g>
<g >
<title>clang-10!llvm::APSInt::extOrTrunc (44 samples, 0.07%)</title><rect x="27.8" y="117" width="0.8" height="15.0" fill="rgb(209,17,33)" rx="2" ry="2" />
<text  x="30.75" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::Perform (30,362 samples, 48.70%)</title><rect x="527.8" y="245" width="574.6" height="15.0" fill="rgb(241,168,7)" rx="2" ry="2" />
<text  x="530.75" y="255.5" >clang-10!clang::InitializationSequence::Perform</text>
</g>
<g >
<title>clang-10!clang::Sema::IsFunctionConversion (720 samples, 1.15%)</title><rect x="743.9" y="85" width="13.6" height="15.0" fill="rgb(219,141,17)" rx="2" ry="2" />
<text  x="746.92" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::IsQualificationConversion (1,000 samples, 1.60%)</title><rect x="757.5" y="85" width="19.0" height="15.0" fill="rgb(205,188,29)" rx="2" ry="2" />
<text  x="760.55" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseAssignmentExpression (4,854 samples, 7.79%)</title><rect x="96.7" y="245" width="91.8" height="15.0" fill="rgb(234,19,29)" rx="2" ry="2" />
<text  x="99.69" y="255.5" >clang-10!c..</text>
</g>
<g >
<title>clang-10!clang::Parser::ParseBraceInitializer (9,192 samples, 14.74%)</title><rect x="85.5" y="261" width="173.9" height="15.0" fill="rgb(221,119,15)" rx="2" ry="2" />
<text  x="88.48" y="271.5" >clang-10!clang::Parser..</text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::UpdateStructuredListElement.isra.625.part.626 (2,100 samples, 3.37%)</title><rect x="569.2" y="149" width="39.7" height="15.0" fill="rgb(206,12,23)" rx="2" ry="2" />
<text  x="572.20" y="159.5" >cla..</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (28 samples, 0.04%)</title><rect x="130.6" y="181" width="0.5" height="15.0" fill="rgb(235,1,47)" rx="2" ry="2" />
<text  x="133.60" y="191.5" ></text>
</g>
<g >
<title>libc.so.6!__GI_ (160 samples, 0.26%)</title><rect x="502.6" y="117" width="3.0" height="15.0" fill="rgb(213,29,2)" rx="2" ry="2" />
<text  x="505.56" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (28 samples, 0.04%)</title><rect x="130.6" y="165" width="0.5" height="15.0" fill="rgb(248,97,45)" rx="2" ry="2" />
<text  x="133.60" y="175.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::hasSameUnqualifiedType.isra.619 (28 samples, 0.04%)</title><rect x="440.2" y="69" width="0.5" height="15.0" fill="rgb(224,209,35)" rx="2" ry="2" />
<text  x="443.18" y="79.5" ></text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker, void&gt;::Visit (24 samples, 0.04%)</title><rect x="1150.7" y="181" width="0.4" height="15.0" fill="rgb(213,121,25)" rx="2" ry="2" />
<text  x="1153.67" y="191.5" ></text>
</g>
<g >
<title>clang-10!MaybeProduceObjCObject (72 samples, 0.12%)</title><rect x="662.8" y="133" width="1.4" height="15.0" fill="rgb(254,219,0)" rx="2" ry="2" />
<text  x="665.84" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::APValue::swap (1,240 samples, 1.99%)</title><rect x="56.3" y="149" width="23.5" height="15.0" fill="rgb(240,102,9)" rx="2" ry="2" />
<text  x="59.32" y="159.5" >c..</text>
</g>
<g >
<title>clang-10!clang::APValue::Arr::Arr (1,250 samples, 2.00%)</title><rect x="32.7" y="133" width="23.6" height="15.0" fill="rgb(252,78,33)" rx="2" ry="2" />
<text  x="35.67" y="143.5" >c..</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::Step::Destroy (208 samples, 0.33%)</title><rect x="1043.8" y="133" width="3.9" height="15.0" fill="rgb(239,48,11)" rx="2" ry="2" />
<text  x="1046.77" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (108 samples, 0.17%)</title><rect x="102.1" y="197" width="2.0" height="15.0" fill="rgb(233,226,46)" rx="2" ry="2" />
<text  x="105.06" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::getAsArrayType (204 samples, 0.33%)</title><rect x="369.6" y="117" width="3.9" height="15.0" fill="rgb(218,50,44)" rx="2" ry="2" />
<text  x="372.59" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::CorrectDelayedTyposInExpr (292 samples, 0.47%)</title><rect x="253.9" y="245" width="5.5" height="15.0" fill="rgb(237,205,24)" rx="2" ry="2" />
<text  x="256.92" y="255.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseDeclGroup (58,652 samples, 94.07%)</title><rect x="79.8" y="293" width="1110.0" height="15.0" fill="rgb(249,32,5)" rx="2" ry="2" />
<text  x="82.79" y="303.5" >clang-10!clang::Parser::ParseDeclGroup</text>
</g>
<g >
<title>clang-10!clang::Stmt::children (8 samples, 0.01%)</title><rect x="262.9" y="197" width="0.2" height="15.0" fill="rgb(237,187,33)" rx="2" ry="2" />
<text  x="265.93" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::Type::getNullability (640 samples, 1.03%)</title><rect x="934.4" y="85" width="12.1" height="15.0" fill="rgb(229,225,11)" rx="2" ry="2" />
<text  x="937.39" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::getExprLoc (12 samples, 0.02%)</title><rect x="26.3" y="117" width="0.2" height="15.0" fill="rgb(233,144,21)" rx="2" ry="2" />
<text  x="29.31" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::IntExprEvaluator, bool&gt;::Visit.part.2477 (188 samples, 0.30%)</title><rect x="13.7" y="117" width="3.6" height="15.0" fill="rgb(215,158,50)" rx="2" ry="2" />
<text  x="16.71" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::IsFunctionConversion (52 samples, 0.08%)</title><rect x="539.4" y="149" width="1.0" height="15.0" fill="rgb(226,166,33)" rx="2" ry="2" />
<text  x="542.41" y="159.5" ></text>
</g>
<g >
<title>[Unknown]!Total (62,349 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(250,170,19)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[Unknown]!Total</text>
</g>
<g >
<title>clang-10!clang::Lexer::getSourceLocation (28 samples, 0.04%)</title><rect x="142.0" y="165" width="0.6" height="15.0" fill="rgb(232,126,35)" rx="2" ry="2" />
<text  x="145.03" y="175.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTVector&lt;clang::Stmt*&gt;::grow (244 samples, 0.39%)</title><rect x="594.7" y="117" width="4.6" height="15.0" fill="rgb(210,139,7)" rx="2" ry="2" />
<text  x="597.71" y="127.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (34 samples, 0.05%)</title><rect x="1150.5" y="197" width="0.6" height="15.0" fill="rgb(251,222,9)" rx="2" ry="2" />
<text  x="1153.48" y="207.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::SelfReferenceChecker::CheckExpr (1,476 samples, 2.37%)</title><rect x="260.3" y="229" width="27.9" height="15.0" fill="rgb(225,109,33)" rx="2" ry="2" />
<text  x="263.28" y="239.5" >c..</text>
</g>
<g >
<title>clang-10!clang::Expr::IgnoreParens (300 samples, 0.48%)</title><rect x="999.4" y="101" width="5.7" height="15.0" fill="rgb(213,87,52)" rx="2" ry="2" />
<text  x="1002.41" y="111.5" ></text>
</g>
<g >
<title>clang-10!HandleSizeof (220 samples, 0.35%)</title><rect x="22.1" y="117" width="4.2" height="15.0" fill="rgb(215,191,49)" rx="2" ry="2" />
<text  x="25.15" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (244 samples, 0.39%)</title><rect x="1133.3" y="181" width="4.6" height="15.0" fill="rgb(250,112,19)" rx="2" ry="2" />
<text  x="1136.27" y="191.5" ></text>
</g>
<g >
<title>libstdc++.so.6!operator new (412 samples, 0.66%)</title><rect x="397.6" y="101" width="7.8" height="15.0" fill="rgb(245,33,52)" rx="2" ry="2" />
<text  x="400.60" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::getTypeInfoInChars (212 samples, 0.34%)</title><rect x="22.3" y="85" width="4.0" height="15.0" fill="rgb(210,158,52)" rx="2" ry="2" />
<text  x="25.30" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::~InitializationSequence (1,664 samples, 2.67%)</title><rect x="483.5" y="133" width="31.5" height="15.0" fill="rgb(231,65,18)" rx="2" ry="2" />
<text  x="486.49" y="143.5" >cl..</text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (548 samples, 0.88%)</title><rect x="132.2" y="181" width="10.4" height="15.0" fill="rgb(206,144,45)" rx="2" ry="2" />
<text  x="135.19" y="191.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (32 samples, 0.05%)</title><rect x="1166.6" y="165" width="0.6" height="15.0" fill="rgb(215,185,38)" rx="2" ry="2" />
<text  x="1169.57" y="175.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (12 samples, 0.02%)</title><rect x="265.7" y="197" width="0.2" height="15.0" fill="rgb(228,68,44)" rx="2" ry="2" />
<text  x="268.65" y="207.5" ></text>
</g>
<g >
<title>clang-10!AnalyzeImplicitConversions (1,636 samples, 2.62%)</title><rect x="1106.9" y="197" width="31.0" height="15.0" fill="rgb(243,57,12)" rx="2" ry="2" />
<text  x="1109.93" y="207.5" >cl..</text>
</g>
<g >
<title>clang-10!clang::APNumericStorage::setIntValue (24 samples, 0.04%)</title><rect x="158.2" y="149" width="0.4" height="15.0" fill="rgb(220,110,7)" rx="2" ry="2" />
<text  x="161.19" y="159.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckSubElementType (28,162 samples, 45.17%)</title><rect x="541.6" y="165" width="533.0" height="15.0" fill="rgb(208,165,12)" rx="2" ry="2" />
<text  x="544.61" y="175.5" >clang-10!(anonymous namespace)::InitListChecker::CheckSubElementType</text>
</g>
<g >
<title>clang-10!clang::VarDecl::evaluateValue (3,688 samples, 5.92%)</title><rect x="10.0" y="229" width="69.8" height="15.0" fill="rgb(228,197,50)" rx="2" ry="2" />
<text  x="13.00" y="239.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Expr::IgnoreParens (112 samples, 0.18%)</title><rect x="1014.2" y="85" width="2.1" height="15.0" fill="rgb(221,85,54)" rx="2" ry="2" />
<text  x="1017.17" y="95.5" ></text>
</g>
<g >
<title>[Unknown]![Outside any known module] (12 samples, 0.02%)</title><rect x="1102.4" y="213" width="0.2" height="15.0" fill="rgb(208,181,8)" rx="2" ry="2" />
<text  x="1105.37" y="223.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::CheckExceptionSpecCompatibility (904 samples, 1.45%)</title><rect x="907.4" y="101" width="17.1" height="15.0" fill="rgb(237,83,19)" rx="2" ry="2" />
<text  x="910.44" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::Type::isScalarType (8 samples, 0.01%)</title><rect x="18.6" y="117" width="0.2" height="15.0" fill="rgb(205,85,33)" rx="2" ry="2" />
<text  x="21.63" y="127.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (108 samples, 0.17%)</title><rect x="102.1" y="213" width="2.0" height="15.0" fill="rgb(238,213,9)" rx="2" ry="2" />
<text  x="105.06" y="223.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::operator new (124 samples, 0.20%)</title><rect x="186.2" y="149" width="2.3" height="15.0" fill="rgb(234,133,12)" rx="2" ry="2" />
<text  x="189.20" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::ActOnInitList (610 samples, 0.98%)</title><rect x="242.4" y="245" width="11.5" height="15.0" fill="rgb(237,5,49)" rx="2" ry="2" />
<text  x="245.38" y="255.5" ></text>
</g>
<g >
<title>clang-10!clang::InitListExpr::updateInit (1,600 samples, 2.57%)</title><rect x="578.7" y="133" width="30.2" height="15.0" fill="rgb(210,109,16)" rx="2" ry="2" />
<text  x="581.66" y="143.5" >cl..</text>
</g>
<g >
<title>clang-10!clang::IntegerLiteral::IntegerLiteral (1,456 samples, 2.34%)</title><rect x="158.6" y="149" width="27.6" height="15.0" fill="rgb(217,26,48)" rx="2" ry="2" />
<text  x="161.65" y="159.5" >c..</text>
</g>
<g >
<title>clang-10!clang::ExecuteCompilerInvocation (62,339 samples, 99.98%)</title><rect x="10.0" y="453" width="1179.8" height="15.0" fill="rgb(238,31,45)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >clang-10!clang::ExecuteCompilerInvocation</text>
</g>
<g >
<title>clang-10!clang::APValue::swap (124 samples, 0.20%)</title><rect x="14.2" y="85" width="2.3" height="15.0" fill="rgb(215,90,32)" rx="2" ry="2" />
<text  x="17.16" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::ActOnIntegerConstant (2,244 samples, 3.60%)</title><rect x="146.1" y="181" width="42.4" height="15.0" fill="rgb(217,123,6)" rx="2" ry="2" />
<text  x="149.08" y="191.5" >cla..</text>
</g>
<g >
<title>clang-10!clang::CodeGen::ConstantEmitter::tryEmitForInitializer (3,688 samples, 5.92%)</title><rect x="10.0" y="277" width="69.8" height="15.0" fill="rgb(218,111,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::CodeGen::CodeGenModule::EmitGlobalDefinition (3,688 samples, 5.92%)</title><rect x="10.0" y="309" width="69.8" height="15.0" fill="rgb(205,215,49)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Sema::PerformImplicitConversion (3,428 samples, 5.50%)</title><rect x="887.0" y="117" width="64.9" height="15.0" fill="rgb(215,74,40)" rx="2" ry="2" />
<text  x="890.00" y="127.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Expr::IgnoreParenImpCasts (88 samples, 0.14%)</title><rect x="1123.7" y="181" width="1.7" height="15.0" fill="rgb(238,190,24)" rx="2" ry="2" />
<text  x="1126.73" y="191.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (32 samples, 0.05%)</title><rect x="1166.6" y="149" width="0.6" height="15.0" fill="rgb(231,107,13)" rx="2" ry="2" />
<text  x="1169.57" y="159.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::FillInEmptyInitializations (232 samples, 0.37%)</title><rect x="1098.0" y="213" width="4.4" height="15.0" fill="rgb(235,225,1)" rx="2" ry="2" />
<text  x="1100.98" y="223.5" ></text>
</g>
<g >
<title>libstdc++.so.6!operator new (804 samples, 1.29%)</title><rect x="690.9" y="117" width="15.2" height="15.0" fill="rgb(214,68,16)" rx="2" ry="2" />
<text  x="693.93" y="127.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckExplicitInitList (30,130 samples, 48.32%)</title><rect x="527.8" y="213" width="570.2" height="15.0" fill="rgb(231,131,34)" rx="2" ry="2" />
<text  x="530.75" y="223.5" >clang-10!(anonymous namespace)::InitListChecker::CheckExplicitInitList</text>
</g>
<g >
<title>clang-10!clang::StandardConversionSequence::setAsIdentityConversion (32 samples, 0.05%)</title><rect x="473.8" y="69" width="0.6" height="15.0" fill="rgb(254,17,47)" rx="2" ry="2" />
<text  x="476.79" y="79.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::ActOnFinishFullExpr (4,620 samples, 7.41%)</title><rect x="1102.4" y="245" width="87.4" height="15.0" fill="rgb(234,1,21)" rx="2" ry="2" />
<text  x="1105.37" y="255.5" >clang-10!c..</text>
</g>
<g >
<title>clang-10!clang::ImplicitConversionSequence::ImplicitConversionSequence (408 samples, 0.65%)</title><rect x="776.7" y="101" width="7.7" height="15.0" fill="rgb(221,212,40)" rx="2" ry="2" />
<text  x="779.70" y="111.5" ></text>
</g>
<g >
<title>libc.so.6!__GI___libc_malloc (744 samples, 1.19%)</title><rect x="692.1" y="101" width="14.0" height="15.0" fill="rgb(247,82,43)" rx="2" ry="2" />
<text  x="695.06" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::getAsArrayType (120 samples, 0.19%)</title><rect x="518.3" y="133" width="2.3" height="15.0" fill="rgb(251,192,30)" rx="2" ry="2" />
<text  x="521.31" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::Lex (56 samples, 0.09%)</title><rect x="131.1" y="181" width="1.1" height="15.0" fill="rgb(222,222,22)" rx="2" ry="2" />
<text  x="134.13" y="191.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (12 samples, 0.02%)</title><rect x="1162.8" y="165" width="0.2" height="15.0" fill="rgb(237,9,34)" rx="2" ry="2" />
<text  x="1165.78" y="175.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::AddInitializerToDecl (49,159 samples, 78.84%)</title><rect x="259.4" y="261" width="930.4" height="15.0" fill="rgb(215,199,51)" rx="2" ry="2" />
<text  x="262.45" y="271.5" >clang-10!clang::Sema::AddInitializerToDecl</text>
</g>
<g >
<title>clang-10!(anonymous namespace)::ArrayExprEvaluator::VisitInitListExpr (3,664 samples, 5.88%)</title><rect x="10.5" y="165" width="69.3" height="15.0" fill="rgb(213,38,6)" rx="2" ry="2" />
<text  x="13.45" y="175.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::AddConversionSequenceStep (1,640 samples, 2.63%)</title><rect x="374.4" y="117" width="31.0" height="15.0" fill="rgb(230,184,34)" rx="2" ry="2" />
<text  x="377.36" y="127.5" >cl..</text>
</g>
<g >
<title>clang-10!llvm::APInt::compareSigned (20 samples, 0.03%)</title><rect x="27.4" y="101" width="0.4" height="15.0" fill="rgb(220,43,54)" rx="2" ry="2" />
<text  x="30.37" y="111.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (8 samples, 0.01%)</title><rect x="262.9" y="213" width="0.2" height="15.0" fill="rgb(218,25,48)" rx="2" ry="2" />
<text  x="265.93" y="223.5" ></text>
</g>
<g >
<title>clang-10!TryImplicitConversion (4,088 samples, 6.56%)</title><rect x="707.5" y="117" width="77.4" height="15.0" fill="rgb(218,99,8)" rx="2" ry="2" />
<text  x="710.51" y="127.5" >clang-10..</text>
</g>
<g >
<title>clang-10!clang::ImplicitConversionSequence::ImplicitConversionSequence (452 samples, 0.72%)</title><rect x="682.4" y="117" width="8.5" height="15.0" fill="rgb(215,50,23)" rx="2" ry="2" />
<text  x="685.37" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (72 samples, 0.12%)</title><rect x="1188.4" y="149" width="1.4" height="15.0" fill="rgb(215,15,16)" rx="2" ry="2" />
<text  x="1191.45" y="159.5" ></text>
</g>
<g >
<title>libstdc++.so.6!operator delete (12 samples, 0.02%)</title><rect x="1073.2" y="133" width="0.2" height="15.0" fill="rgb(228,156,49)" rx="2" ry="2" />
<text  x="1076.22" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParsePostfixExpressionSuffix (472 samples, 0.76%)</title><rect x="116.1" y="197" width="9.0" height="15.0" fill="rgb(247,157,31)" rx="2" ry="2" />
<text  x="119.14" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::Type::isLiteralType (80 samples, 0.13%)</title><rect x="17.3" y="133" width="1.5" height="15.0" fill="rgb(228,95,6)" rx="2" ry="2" />
<text  x="20.27" y="143.5" ></text>
</g>
<g >
<title>clang-10!IsStandardConversion (3,180 samples, 5.10%)</title><rect x="716.5" y="101" width="60.2" height="15.0" fill="rgb(229,5,13)" rx="2" ry="2" />
<text  x="719.52" y="111.5" >clang-..</text>
</g>
<g >
<title>clang-10!clang::StandardConversionSequence::setAsIdentityConversion (12 samples, 0.02%)</title><rect x="776.5" y="85" width="0.2" height="15.0" fill="rgb(225,193,18)" rx="2" ry="2" />
<text  x="779.47" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::CodeGen::CodeGenModule::EmitTopLevelDecl.part.4979 (3,688 samples, 5.92%)</title><rect x="10.0" y="341" width="69.8" height="15.0" fill="rgb(214,111,47)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Sema::checkInitializerLifetime (68 samples, 0.11%)</title><rect x="567.7" y="133" width="1.3" height="15.0" fill="rgb(246,215,48)" rx="2" ry="2" />
<text  x="570.69" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::CheckCompletedExpr (4,608 samples, 7.39%)</title><rect x="1102.6" y="229" width="87.2" height="15.0" fill="rgb(217,225,39)" rx="2" ry="2" />
<text  x="1105.60" y="239.5" >clang-10!c..</text>
</g>
<g >
<title>clang-10!TryImplicitConversion (4,058 samples, 6.51%)</title><rect x="406.7" y="101" width="76.8" height="15.0" fill="rgb(219,77,31)" rx="2" ry="2" />
<text  x="409.68" y="111.5" >clang-10..</text>
</g>
<g >
<title>clang-10!clang::ASTContext::getAsArrayType (364 samples, 0.58%)</title><rect x="1077.2" y="149" width="6.9" height="15.0" fill="rgb(224,113,26)" rx="2" ry="2" />
<text  x="1080.23" y="159.5" ></text>
</g>
<g >
<title>libc.so.6!__memset_avx2_unaligned_erms (316 samples, 0.51%)</title><rect x="603.0" y="117" width="5.9" height="15.0" fill="rgb(210,163,17)" rx="2" ry="2" />
<text  x="605.97" y="127.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (16 samples, 0.03%)</title><rect x="300.3" y="149" width="0.3" height="15.0" fill="rgb(236,15,12)" rx="2" ry="2" />
<text  x="303.32" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::getSourceLocation (48 samples, 0.08%)</title><rect x="232.4" y="197" width="0.9" height="15.0" fill="rgb(228,171,53)" rx="2" ry="2" />
<text  x="235.38" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::InitListExpr::InitListExpr (410 samples, 0.66%)</title><rect x="246.2" y="229" width="7.7" height="15.0" fill="rgb(248,12,26)" rx="2" ry="2" />
<text  x="249.16" y="239.5" ></text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::InitializeFrom (7,974 samples, 12.79%)</title><rect x="332.6" y="133" width="150.9" height="15.0" fill="rgb(220,132,14)" rx="2" ry="2" />
<text  x="335.57" y="143.5" >clang-10!clang::Ini..</text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (20 samples, 0.03%)</title><rect x="515.0" y="133" width="0.4" height="15.0" fill="rgb(238,139,29)" rx="2" ry="2" />
<text  x="517.98" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseExternalDeclaration (58,652 samples, 94.07%)</title><rect x="79.8" y="341" width="1110.0" height="15.0" fill="rgb(216,161,31)" rx="2" ry="2" />
<text  x="82.79" y="351.5" >clang-10!clang::Parser::ParseExternalDeclaration</text>
</g>
<g >
<title>clang-10!clang::ASTContext::toCharUnitsFromBits (132 samples, 0.21%)</title><rect x="23.8" y="69" width="2.5" height="15.0" fill="rgb(230,226,10)" rx="2" ry="2" />
<text  x="26.82" y="79.5" ></text>
</g>
<g >
<title>clang-10!clang::EvaluatedExprVisitorBase&lt;std::add_pointer, (anonymous namespace)::SelfReferenceChecker&gt;::VisitStmt (1,180 samples, 1.89%)</title><rect x="265.9" y="197" width="22.3" height="15.0" fill="rgb(246,206,17)" rx="2" ry="2" />
<text  x="268.88" y="207.5" >c..</text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (52 samples, 0.08%)</title><rect x="539.4" y="133" width="1.0" height="15.0" fill="rgb(250,201,46)" rx="2" ry="2" />
<text  x="542.41" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Type::isIntegerType (276 samples, 0.44%)</title><rect x="866.0" y="117" width="5.2" height="15.0" fill="rgb(231,65,48)" rx="2" ry="2" />
<text  x="868.99" y="127.5" ></text>
</g>
<g >
<title>clang-10!IsStandardConversion (3,114 samples, 4.99%)</title><rect x="415.5" y="85" width="58.9" height="15.0" fill="rgb(210,148,15)" rx="2" ry="2" />
<text  x="418.47" y="95.5" >clang-..</text>
</g>
<g >
<title>clang-10!clang::ASTContext::hasSameUnqualifiedType.isra.619 (244 samples, 0.39%)</title><rect x="752.9" y="69" width="4.6" height="15.0" fill="rgb(212,182,20)" rx="2" ry="2" />
<text  x="755.93" y="79.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::MayBeDesignationStart (36 samples, 0.06%)</title><rect x="96.0" y="245" width="0.7" height="15.0" fill="rgb(240,30,9)" rx="2" ry="2" />
<text  x="99.01" y="255.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (16 samples, 0.03%)</title><rect x="541.2" y="149" width="0.3" height="15.0" fill="rgb(241,43,27)" rx="2" ry="2" />
<text  x="544.15" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (48 samples, 0.08%)</title><rect x="287.3" y="181" width="0.9" height="15.0" fill="rgb(225,178,22)" rx="2" ry="2" />
<text  x="290.30" y="191.5" ></text>
</g>
<g >
<title>clang-10!llvm::DenseMapIterator&lt;clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo&lt;clang::Type const*&gt;, llvm::detail::DenseMapPair&lt;clang::Type const*, clang::TypeInfo&gt;, (bool)0&gt;::DenseMapIterator (40 samples, 0.06%)</title><rect x="25.6" y="37" width="0.7" height="15.0" fill="rgb(248,188,5)" rx="2" ry="2" />
<text  x="28.56" y="47.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseDeclOrFunctionDefInternal (58,652 samples, 94.07%)</title><rect x="79.8" y="309" width="1110.0" height="15.0" fill="rgb(247,36,13)" rx="2" ry="2" />
<text  x="82.79" y="319.5" >clang-10!clang::Parser::ParseDeclOrFunctionDefInternal</text>
</g>
<g >
<title>clang-10!clang::InitializedEntity::InitializedEntity (504 samples, 0.81%)</title><rect x="1074.6" y="165" width="9.5" height="15.0" fill="rgb(240,3,34)" rx="2" ry="2" />
<text  x="1077.59" y="175.5" ></text>
</g>
<g >
<title>clang-10!MaybeProduceObjCObject (48 samples, 0.08%)</title><rect x="368.7" y="117" width="0.9" height="15.0" fill="rgb(223,228,52)" rx="2" ry="2" />
<text  x="371.68" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::StandardConversionSequence::setAsIdentityConversion (56 samples, 0.09%)</title><rect x="482.4" y="85" width="1.1" height="15.0" fill="rgb(210,167,34)" rx="2" ry="2" />
<text  x="485.43" y="95.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::InitListChecker (30,362 samples, 48.70%)</title><rect x="527.8" y="229" width="574.6" height="15.0" fill="rgb(239,112,12)" rx="2" ry="2" />
<text  x="530.75" y="239.5" >clang-10!(anonymous namespace)::InitListChecker::InitListChecker</text>
</g>
<g >
<title>libc.so.6!_int_free (496 samples, 0.80%)</title><rect x="505.6" y="117" width="9.4" height="15.0" fill="rgb(231,45,42)" rx="2" ry="2" />
<text  x="508.59" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::OverloadCandidateSet::destroyCandidates (220 samples, 0.35%)</title><rect x="1047.7" y="133" width="4.2" height="15.0" fill="rgb(213,11,45)" rx="2" ry="2" />
<text  x="1050.71" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (288 samples, 0.46%)</title><rect x="80.0" y="245" width="5.5" height="15.0" fill="rgb(208,35,6)" rx="2" ry="2" />
<text  x="83.03" y="255.5" ></text>
</g>
<g >
<title>clang-10!clang::IntegerLiteral::Create (1,748 samples, 2.80%)</title><rect x="155.5" y="165" width="33.0" height="15.0" fill="rgb(211,70,47)" rx="2" ry="2" />
<text  x="158.47" y="175.5" >cl..</text>
</g>
<g >
<title>clang-10!clang::Sema::ActOnNumericConstant (2,430 samples, 3.90%)</title><rect x="142.6" y="197" width="45.9" height="15.0" fill="rgb(215,182,36)" rx="2" ry="2" />
<text  x="145.56" y="207.5" >clan..</text>
</g>
<g >
<title>clang-10!clang::ASTContext::hasSameUnqualifiedType.isra.619 (212 samples, 0.34%)</title><rect x="447.4" y="53" width="4.0" height="15.0" fill="rgb(208,116,29)" rx="2" ry="2" />
<text  x="450.37" y="63.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::IsFunctionConversion (48 samples, 0.08%)</title><rect x="566.8" y="133" width="0.9" height="15.0" fill="rgb(249,147,35)" rx="2" ry="2" />
<text  x="569.78" y="143.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (12 samples, 0.02%)</title><rect x="260.1" y="229" width="0.2" height="15.0" fill="rgb(245,131,38)" rx="2" ry="2" />
<text  x="263.05" y="239.5" ></text>
</g>
<g >
<title>clang-10!clang::Type::getAs&lt;clang::AttributedType&gt; (360 samples, 0.58%)</title><rect x="939.7" y="69" width="6.8" height="15.0" fill="rgb(242,202,4)" rx="2" ry="2" />
<text  x="942.69" y="79.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexNumericConstant (720 samples, 1.15%)</title><rect x="219.7" y="213" width="13.6" height="15.0" fill="rgb(240,214,6)" rx="2" ry="2" />
<text  x="222.66" y="223.5" ></text>
</g>
<g >
<title>clang-10!llvm::APInt::compareSigned (316 samples, 0.51%)</title><rect x="1084.1" y="165" width="6.0" height="15.0" fill="rgb(210,47,44)" rx="2" ry="2" />
<text  x="1087.12" y="175.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (1,784 samples, 2.86%)</title><rect x="208.6" y="229" width="33.8" height="15.0" fill="rgb(213,83,40)" rx="2" ry="2" />
<text  x="211.61" y="239.5" >cl..</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::InitializeFrom (8,900 samples, 14.27%)</title><rect x="616.4" y="149" width="168.5" height="15.0" fill="rgb(214,219,6)" rx="2" ry="2" />
<text  x="619.44" y="159.5" >clang-10!clang::Initi..</text>
</g>
<g >
<title>clang-10!clang::Expr::hasAnyTypeDependentArguments (80 samples, 0.13%)</title><rect x="667.7" y="133" width="1.5" height="15.0" fill="rgb(208,181,31)" rx="2" ry="2" />
<text  x="670.69" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::Lex (208 samples, 0.33%)</title><rect x="204.7" y="229" width="3.9" height="15.0" fill="rgb(228,216,6)" rx="2" ry="2" />
<text  x="207.67" y="239.5" ></text>
</g>
<g >
<title>libc.so.6!__memmove_avx_unaligned_erms (185 samples, 0.30%)</title><rect x="1147.0" y="197" width="3.5" height="15.0" fill="rgb(222,88,8)" rx="2" ry="2" />
<text  x="1149.97" y="207.5" ></text>
</g>
<g >
<title>libc.so.6!tcache_get (108 samples, 0.17%)</title><rect x="704.1" y="85" width="2.0" height="15.0" fill="rgb(231,149,28)" rx="2" ry="2" />
<text  x="707.10" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::InitializeFrom (12,657 samples, 20.30%)</title><rect x="288.2" y="245" width="239.6" height="15.0" fill="rgb(209,115,17)" rx="2" ry="2" />
<text  x="291.21" y="255.5" >clang-10!clang::InitializationS..</text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckSubElementType (11,346 samples, 18.20%)</title><rect x="300.6" y="149" width="214.8" height="15.0" fill="rgb(233,203,42)" rx="2" ry="2" />
<text  x="303.63" y="159.5" >clang-10!(anonymous namespac..</text>
</g>
<g >
<title>clang-10!clang::Sema::CheckUnsequencedOperations (2,078 samples, 3.33%)</title><rect x="1150.5" y="213" width="39.3" height="15.0" fill="rgb(232,13,36)" rx="2" ry="2" />
<text  x="1153.48" y="223.5" >cla..</text>
</g>
<g >
<title>clang-10!clang::Sema::CheckForIntOverflow (665 samples, 1.07%)</title><rect x="1137.9" y="213" width="12.6" height="15.0" fill="rgb(243,170,26)" rx="2" ry="2" />
<text  x="1140.89" y="223.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (28 samples, 0.04%)</title><rect x="95.5" y="245" width="0.5" height="15.0" fill="rgb(206,90,29)" rx="2" ry="2" />
<text  x="98.48" y="255.5" ></text>
</g>
<g >
<title>libc.so.6!__GI_ (356 samples, 0.57%)</title><rect x="1051.9" y="133" width="6.7" height="15.0" fill="rgb(214,91,26)" rx="2" ry="2" />
<text  x="1054.87" y="143.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::CodeGeneratorImpl::HandleTopLevelDecl (3,688 samples, 5.92%)</title><rect x="10.0" y="357" width="69.8" height="15.0" fill="rgb(253,197,42)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Parser::ParseDeclarationOrFunctionDefinition.part.260 (58,652 samples, 94.07%)</title><rect x="79.8" y="325" width="1110.0" height="15.0" fill="rgb(214,180,38)" rx="2" ry="2" />
<text  x="82.79" y="335.5" >clang-10!clang::Parser::ParseDeclarationOrFunctionDefinition.part.260</text>
</g>
<g >
<title>clang-10!clang::CodeGenAction::ExecuteAction (62,339 samples, 99.98%)</title><rect x="10.0" y="405" width="1179.8" height="15.0" fill="rgb(208,149,12)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >clang-10!clang::CodeGenAction::ExecuteAction</text>
</g>
<g >
<title>clang-10!clang::InitializedEntity::InitializedEntity (276 samples, 0.44%)</title><rect x="515.4" y="149" width="5.2" height="15.0" fill="rgb(205,50,21)" rx="2" ry="2" />
<text  x="518.35" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::GetUnderlyingFunction (692 samples, 1.11%)</title><rect x="911.4" y="85" width="13.1" height="15.0" fill="rgb(221,140,28)" rx="2" ry="2" />
<text  x="914.45" y="95.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (8 samples, 0.01%)</title><rect x="99.0" y="229" width="0.1" height="15.0" fill="rgb(250,38,14)" rx="2" ry="2" />
<text  x="101.96" y="239.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (301 samples, 0.48%)</title><rect x="79.8" y="261" width="5.7" height="15.0" fill="rgb(254,135,48)" rx="2" ry="2" />
<text  x="82.79" y="271.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (88 samples, 0.14%)</title><rect x="203.0" y="213" width="1.7" height="15.0" fill="rgb(227,161,26)" rx="2" ry="2" />
<text  x="206.01" y="223.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::SkipWhitespace (112 samples, 0.18%)</title><rect x="233.3" y="213" width="2.1" height="15.0" fill="rgb(251,196,4)" rx="2" ry="2" />
<text  x="236.29" y="223.5" ></text>
</g>
<g >
<title>clang-10!clang::FrontendAction::Execute (62,339 samples, 99.98%)</title><rect x="10.0" y="421" width="1179.8" height="15.0" fill="rgb(207,221,20)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >clang-10!clang::FrontendAction::Execute</text>
</g>
<g >
<title>libc.so.6!tcache_put (20 samples, 0.03%)</title><rect x="514.6" y="101" width="0.4" height="15.0" fill="rgb(228,196,46)" rx="2" ry="2" />
<text  x="517.60" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (8 samples, 0.01%)</title><rect x="259.4" y="229" width="0.2" height="15.0" fill="rgb(236,53,46)" rx="2" ry="2" />
<text  x="262.45" y="239.5" ></text>
</g>
<g >
<title>[Unknown]![Outside any known module] (13 samples, 0.02%)</title><rect x="79.8" y="245" width="0.2" height="15.0" fill="rgb(214,113,12)" rx="2" ry="2" />
<text  x="82.79" y="255.5" ></text>
</g>
<g >
<title>libc.so.6!__GI___libc_malloc (392 samples, 0.63%)</title><rect x="398.0" y="85" width="7.4" height="15.0" fill="rgb(245,42,44)" rx="2" ry="2" />
<text  x="400.98" y="95.5" ></text>
</g>
<g >
<title>libc.so.6!tcache_put (136 samples, 0.22%)</title><rect x="1070.6" y="117" width="2.6" height="15.0" fill="rgb(251,88,24)" rx="2" ry="2" />
<text  x="1073.65" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (3,688 samples, 5.92%)</title><rect x="10.0" y="293" width="69.8" height="15.0" fill="rgb(250,221,41)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Parser::ParseCastExpression (4,462 samples, 7.16%)</title><rect x="104.1" y="213" width="84.4" height="15.0" fill="rgb(208,141,38)" rx="2" ry="2" />
<text  x="107.10" y="223.5" >clang-10!..</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::Perform (13,020 samples, 20.88%)</title><rect x="784.9" y="149" width="246.4" height="15.0" fill="rgb(253,82,10)" rx="2" ry="2" />
<text  x="787.88" y="159.5" >clang-10!clang::InitializationSe..</text>
</g>
<g >
<title>clang-10!clang::ASTContext::getTypeSizeInChars (212 samples, 0.34%)</title><rect x="22.3" y="101" width="4.0" height="15.0" fill="rgb(246,51,46)" rx="2" ry="2" />
<text  x="25.30" y="111.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (15 samples, 0.02%)</title><rect x="1102.6" y="213" width="0.3" height="15.0" fill="rgb(206,52,23)" rx="2" ry="2" />
<text  x="1105.60" y="223.5" ></text>
</g>
<g >
<title>[Unknown]![Outside any known module] (15 samples, 0.02%)</title><rect x="1102.6" y="197" width="0.3" height="15.0" fill="rgb(223,200,11)" rx="2" ry="2" />
<text  x="1105.60" y="207.5" ></text>
</g>
<g >
<title>clang-10!main (62,339 samples, 99.98%)</title><rect x="10.0" y="485" width="1179.8" height="15.0" fill="rgb(239,0,0)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >clang-10!main</text>
</g>
<g >
<title>clang-10!clang::Type::isUnsignedIntegerOrEnumerationType (28 samples, 0.04%)</title><rect x="16.5" y="85" width="0.5" height="15.0" fill="rgb(218,74,46)" rx="2" ry="2" />
<text  x="19.51" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::DiscardMisalignedMemberAddress (1,202 samples, 1.93%)</title><rect x="848.5" y="133" width="22.7" height="15.0" fill="rgb(213,78,46)" rx="2" ry="2" />
<text  x="851.47" y="143.5" >c..</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (24 samples, 0.04%)</title><rect x="10.0" y="165" width="0.5" height="15.0" fill="rgb(222,209,19)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>clang-10!HandleLValueArrayAdjustment (494 samples, 0.79%)</title><rect x="19.2" y="133" width="9.4" height="15.0" fill="rgb(215,107,43)" rx="2" ry="2" />
<text  x="22.24" y="143.5" ></text>
</g>
<g >
<title>libc.so.6!__libc_start_main (62,339 samples, 99.98%)</title><rect x="10.0" y="501" width="1179.8" height="15.0" fill="rgb(235,167,21)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >libc.so.6!__libc_start_main</text>
</g>
<g >
<title>clang-10!clang::Expr::getExprLoc (416 samples, 0.67%)</title><rect x="1125.4" y="181" width="7.9" height="15.0" fill="rgb(213,63,17)" rx="2" ry="2" />
<text  x="1128.40" y="191.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::checkInitializerLifetime (40 samples, 0.06%)</title><rect x="540.4" y="149" width="0.8" height="15.0" fill="rgb(247,227,15)" rx="2" ry="2" />
<text  x="543.40" y="159.5" ></text>
</g>
<g >
<title>clang-10!EvaluateInPlace (400 samples, 0.64%)</title><rect x="11.2" y="149" width="7.6" height="15.0" fill="rgb(212,185,53)" rx="2" ry="2" />
<text  x="14.21" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::QualType::getNonReferenceType (360 samples, 0.58%)</title><rect x="841.7" y="133" width="6.8" height="15.0" fill="rgb(224,170,20)" rx="2" ry="2" />
<text  x="844.65" y="143.5" ></text>
</g>
<g >
<title>clang-10!llvm::DenseMapIterator&lt;clang::Type const*, clang::TypeInfo, llvm::DenseMapInfo&lt;clang::Type const*&gt;, llvm::detail::DenseMapPair&lt;clang::Type const*, clang::TypeInfo&gt;, (bool)0&gt;::DenseMapIterator (20 samples, 0.03%)</title><rect x="23.4" y="53" width="0.4" height="15.0" fill="rgb(219,212,35)" rx="2" ry="2" />
<text  x="26.44" y="63.5" ></text>
</g>
<g >
<title>all (62,349 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(241,15,21)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::~InitializationSequence (2,228 samples, 3.57%)</title><rect x="1031.3" y="149" width="42.1" height="15.0" fill="rgb(238,120,50)" rx="2" ry="2" />
<text  x="1034.28" y="159.5" >cla..</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (128 samples, 0.21%)</title><rect x="566.8" y="149" width="2.4" height="15.0" fill="rgb(236,114,14)" rx="2" ry="2" />
<text  x="569.78" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::CodeGen::ConstantEmitter::tryEmitPrivateForVarInit (3,688 samples, 5.92%)</title><rect x="10.0" y="261" width="69.8" height="15.0" fill="rgb(251,115,4)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >clang-1..</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (118 samples, 0.19%)</title><rect x="1104.7" y="197" width="2.2" height="15.0" fill="rgb(226,94,0)" rx="2" ry="2" />
<text  x="1107.69" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseDeclarationAfterDeclaratorAndAttributes (58,652 samples, 94.07%)</title><rect x="79.8" y="277" width="1110.0" height="15.0" fill="rgb(220,52,26)" rx="2" ry="2" />
<text  x="82.79" y="287.5" >clang-10!clang::Parser::ParseDeclarationAfterDeclaratorAndAttributes</text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (60 samples, 0.10%)</title><rect x="1073.4" y="149" width="1.2" height="15.0" fill="rgb(235,31,41)" rx="2" ry="2" />
<text  x="1076.45" y="159.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckListElementTypes.constprop.1003 (30,130 samples, 48.32%)</title><rect x="527.8" y="197" width="570.2" height="15.0" fill="rgb(214,22,13)" rx="2" ry="2" />
<text  x="530.75" y="207.5" >clang-10!(anonymous namespace)::InitListChecker::CheckListElementTypes.constpr..</text>
</g>
<g >
<title>clang-10!clang::Preprocessor::Lex (2,228 samples, 3.57%)</title><rect x="200.2" y="245" width="42.2" height="15.0" fill="rgb(218,55,43)" rx="2" ry="2" />
<text  x="203.21" y="255.5" >cla..</text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker, void&gt;::Visit (1,416 samples, 2.27%)</title><rect x="1163.0" y="181" width="26.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1166.01" y="191.5" >c..</text>
</g>
<g >
<title>clang-10!llvm::APInt::clearUnusedBits (12 samples, 0.02%)</title><rect x="17.0" y="101" width="0.3" height="15.0" fill="rgb(243,82,45)" rx="2" ry="2" />
<text  x="20.04" y="111.5" ></text>
</g>
<g >
<title>[Unknown]![Outside any known module] (10 samples, 0.02%)</title><rect x="1150.5" y="181" width="0.2" height="15.0" fill="rgb(227,221,3)" rx="2" ry="2" />
<text  x="1153.48" y="191.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::IgnoreParenCasts (310 samples, 0.50%)</title><rect x="1141.1" y="197" width="5.9" height="15.0" fill="rgb(227,204,16)" rx="2" ry="2" />
<text  x="1144.11" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::getExprLoc (106 samples, 0.17%)</title><rect x="1104.7" y="181" width="2.0" height="15.0" fill="rgb(248,42,12)" rx="2" ry="2" />
<text  x="1107.69" y="191.5" ></text>
</g>
<g >
<title>libc.so.6!tcache_get (140 samples, 0.22%)</title><rect x="402.7" y="69" width="2.7" height="15.0" fill="rgb(243,32,23)" rx="2" ry="2" />
<text  x="405.75" y="79.5" ></text>
</g>
<g >
<title>clang-10!getAssignmentAction (12 samples, 0.02%)</title><rect x="569.0" y="133" width="0.2" height="15.0" fill="rgb(247,205,42)" rx="2" ry="2" />
<text  x="571.97" y="143.5" ></text>
</g>
<g >
<title>clang-10!_start (62,339 samples, 99.98%)</title><rect x="10.0" y="517" width="1179.8" height="15.0" fill="rgb(214,97,40)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >clang-10!_start</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (116 samples, 0.19%)</title><rect x="539.4" y="165" width="2.2" height="15.0" fill="rgb(242,127,16)" rx="2" ry="2" />
<text  x="542.41" y="175.5" ></text>
</g>
<g >
<title>libc.so.6!_int_free (772 samples, 1.24%)</title><rect x="1058.6" y="133" width="14.6" height="15.0" fill="rgb(227,82,22)" rx="2" ry="2" />
<text  x="1061.61" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Type::isIncompleteType (40 samples, 0.06%)</title><rect x="17.9" y="117" width="0.7" height="15.0" fill="rgb(216,9,27)" rx="2" ry="2" />
<text  x="20.87" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::BackendConsumer::HandleTopLevelDecl (3,688 samples, 5.92%)</title><rect x="10.0" y="373" width="69.8" height="15.0" fill="rgb(247,98,8)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >clang-1..</text>
</g>
<g >
<title>clang-10!cc1_main (62,339 samples, 99.98%)</title><rect x="10.0" y="469" width="1179.8" height="15.0" fill="rgb(208,157,31)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >clang-10!cc1_main</text>
</g>
<g >
<title>clang-10!getAssignmentAction (132 samples, 0.21%)</title><rect x="1028.8" y="133" width="2.5" height="15.0" fill="rgb(208,58,53)" rx="2" ry="2" />
<text  x="1031.78" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::hasAnyTypeDependentArguments (48 samples, 0.08%)</title><rect x="373.5" y="117" width="0.9" height="15.0" fill="rgb(243,88,9)" rx="2" ry="2" />
<text  x="376.45" y="127.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::SelfReferenceChecker::CheckExpr (1,512 samples, 2.43%)</title><rect x="259.6" y="245" width="28.6" height="15.0" fill="rgb(211,11,43)" rx="2" ry="2" />
<text  x="262.60" y="255.5" >cl..</text>
</g>
<g >
<title>clang-10!clang::Sema::IsFunctionConversion (564 samples, 0.90%)</title><rect x="440.7" y="69" width="10.7" height="15.0" fill="rgb(244,113,13)" rx="2" ry="2" />
<text  x="443.71" y="79.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (8 samples, 0.01%)</title><rect x="259.4" y="245" width="0.2" height="15.0" fill="rgb(210,15,8)" rx="2" ry="2" />
<text  x="262.45" y="255.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::skipRValueSubobjectAdjustments (592 samples, 0.95%)</title><rect x="1005.1" y="101" width="11.2" height="15.0" fill="rgb(234,222,28)" rx="2" ry="2" />
<text  x="1008.09" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::getAndAdvanceChar (244 samples, 0.39%)</title><rect x="137.4" y="165" width="4.6" height="15.0" fill="rgb(236,21,37)" rx="2" ry="2" />
<text  x="140.41" y="175.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (12 samples, 0.02%)</title><rect x="1106.7" y="181" width="0.2" height="15.0" fill="rgb(252,122,6)" rx="2" ry="2" />
<text  x="1109.70" y="191.5" ></text>
</g>
<g >
<title>clang-10!clang::VarDecl::evaluateValue (3,688 samples, 5.92%)</title><rect x="10.0" y="245" width="69.8" height="15.0" fill="rgb(253,3,9)" rx="2" ry="2" />
<text  x="13.00" y="255.5" >clang-1..</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (12 samples, 0.02%)</title><rect x="1102.4" y="229" width="0.2" height="15.0" fill="rgb(234,220,5)" rx="2" ry="2" />
<text  x="1105.37" y="239.5" ></text>
</g>
<g >
<title>clang-10!clang::CodeGen::CodeGenModule::EmitGlobal (3,688 samples, 5.92%)</title><rect x="10.0" y="325" width="69.8" height="15.0" fill="rgb(248,69,51)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Expr::IgnoreParens (172 samples, 0.28%)</title><rect x="862.7" y="117" width="3.3" height="15.0" fill="rgb(214,177,27)" rx="2" ry="2" />
<text  x="865.73" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::InitializationSequence (536 samples, 0.86%)</title><rect x="322.4" y="133" width="10.2" height="15.0" fill="rgb(211,160,19)" rx="2" ry="2" />
<text  x="325.43" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::CompilerInstance::ExecuteAction (62,339 samples, 99.98%)</title><rect x="10.0" y="437" width="1179.8" height="15.0" fill="rgb(233,154,27)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >clang-10!clang::CompilerInstance::ExecuteAction</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::Step::Destroy (208 samples, 0.33%)</title><rect x="494.8" y="117" width="4.0" height="15.0" fill="rgb(231,46,30)" rx="2" ry="2" />
<text  x="497.84" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::SelfReferenceChecker, void&gt;::Visit (1,328 samples, 2.13%)</title><rect x="263.1" y="213" width="25.1" height="15.0" fill="rgb(225,153,34)" rx="2" ry="2" />
<text  x="266.08" y="223.5" >c..</text>
</g>
<g >
<title>clang-10!clang::QualType::getUnqualifiedType (488 samples, 0.78%)</title><rect x="767.2" y="69" width="9.3" height="15.0" fill="rgb(242,151,4)" rx="2" ry="2" />
<text  x="770.24" y="79.5" ></text>
</g>
<g >
<title>clang-10!clang::getBinOpPrecedence (20 samples, 0.03%)</title><rect x="199.8" y="229" width="0.4" height="15.0" fill="rgb(226,57,15)" rx="2" ry="2" />
<text  x="202.83" y="239.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::diagnoseNullableToNonnullConversion (1,160 samples, 1.86%)</title><rect x="924.5" y="101" width="22.0" height="15.0" fill="rgb(219,208,36)" rx="2" ry="2" />
<text  x="927.55" y="111.5" >c..</text>
</g>
<g >
<title>clang-10!clang::APValue::APValue (216 samples, 0.35%)</title><rect x="28.6" y="149" width="4.1" height="15.0" fill="rgb(226,140,49)" rx="2" ry="2" />
<text  x="31.58" y="159.5" ></text>
</g>
<g >
<title>clang-10!EvaluateInPlace (3,688 samples, 5.92%)</title><rect x="10.0" y="197" width="69.8" height="15.0" fill="rgb(219,170,5)" rx="2" ry="2" />
<text  x="13.00" y="207.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Lexer::getAndAdvanceChar (368 samples, 0.59%)</title><rect x="235.4" y="213" width="7.0" height="15.0" fill="rgb(205,70,53)" rx="2" ry="2" />
<text  x="238.41" y="223.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::TryImplicitConversion (4,160 samples, 6.67%)</title><rect x="706.1" y="133" width="78.8" height="15.0" fill="rgb(250,147,54)" rx="2" ry="2" />
<text  x="709.15" y="143.5" >clang-10!..</text>
</g>
<g >
<title>clang-10!llvm::APInt::operator++ (416 samples, 0.67%)</title><rect x="1090.1" y="165" width="7.9" height="15.0" fill="rgb(212,45,36)" rx="2" ry="2" />
<text  x="1093.10" y="175.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::children (12 samples, 0.02%)</title><rect x="265.7" y="181" width="0.2" height="15.0" fill="rgb(209,110,48)" rx="2" ry="2" />
<text  x="268.65" y="191.5" ></text>
</g>
<g >
<title>clang-10!AnalyzeImplicitConversions (1,850 samples, 2.97%)</title><rect x="1102.9" y="213" width="35.0" height="15.0" fill="rgb(230,165,45)" rx="2" ry="2" />
<text  x="1105.88" y="223.5" >cl..</text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckListElementTypes.constprop.1003 (12,657 samples, 20.30%)</title><rect x="288.2" y="181" width="239.6" height="15.0" fill="rgb(209,132,26)" rx="2" ry="2" />
<text  x="291.21" y="191.5" >clang-10!(anonymous namespace):..</text>
</g>
<g >
<title>clang-10!clang::ASTContext::hasSameUnqualifiedType.isra.619 (64 samples, 0.10%)</title><rect x="742.7" y="85" width="1.2" height="15.0" fill="rgb(218,173,18)" rx="2" ry="2" />
<text  x="745.71" y="95.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::getTypeInfo (80 samples, 0.13%)</title><rect x="22.3" y="69" width="1.5" height="15.0" fill="rgb(220,208,20)" rx="2" ry="2" />
<text  x="25.30" y="79.5" ></text>
</g>
<g >
<title>clang-10!visitLocalsRetainedByInitializer (2,320 samples, 3.72%)</title><rect x="972.4" y="117" width="43.9" height="15.0" fill="rgb(228,166,49)" rx="2" ry="2" />
<text  x="975.39" y="127.5" >clan..</text>
</g>
<g >
<title>libc.so.6!__GI___libc_malloc (8 samples, 0.01%)</title><rect x="188.4" y="133" width="0.1" height="15.0" fill="rgb(223,66,35)" rx="2" ry="2" />
<text  x="191.40" y="143.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::InitListChecker (12,657 samples, 20.30%)</title><rect x="288.2" y="213" width="239.6" height="15.0" fill="rgb(215,218,35)" rx="2" ry="2" />
<text  x="291.21" y="223.5" >clang-10!(anonymous namespace):..</text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (284 samples, 0.46%)</title><rect x="946.5" y="101" width="5.4" height="15.0" fill="rgb(227,49,23)" rx="2" ry="2" />
<text  x="949.50" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseRHSOfBinaryExpression (616 samples, 0.99%)</title><rect x="188.5" y="245" width="11.7" height="15.0" fill="rgb(248,62,29)" rx="2" ry="2" />
<text  x="191.55" y="255.5" ></text>
</g>
<g >
<title>clang-10!llvm::APInt::operator++ (267 samples, 0.43%)</title><rect x="522.7" y="149" width="5.1" height="15.0" fill="rgb(239,10,2)" rx="2" ry="2" />
<text  x="525.70" y="159.5" ></text>
</g>
<g >
<title>libc.so.6!__memmove_avx_unaligned_erms (244 samples, 0.39%)</title><rect x="594.7" y="101" width="4.6" height="15.0" fill="rgb(216,223,33)" rx="2" ry="2" />
<text  x="597.71" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker, void&gt;::Visit (2,044 samples, 3.28%)</title><rect x="1151.1" y="197" width="38.7" height="15.0" fill="rgb(245,88,43)" rx="2" ry="2" />
<text  x="1154.13" y="207.5" >cla..</text>
</g>
<g >
<title>clang-10!clang::ImplicitConversionSequence::ImplicitConversionSequence (348 samples, 0.56%)</title><rect x="391.0" y="101" width="6.6" height="15.0" fill="rgb(222,187,27)" rx="2" ry="2" />
<text  x="394.01" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::APValue::MakeArray (1,250 samples, 2.00%)</title><rect x="32.7" y="149" width="23.6" height="15.0" fill="rgb(252,215,13)" rx="2" ry="2" />
<text  x="35.67" y="159.5" >c..</text>
</g>
<g >
<title>clang-10!llvm::APSInt::compareValues (56 samples, 0.09%)</title><rect x="26.7" y="117" width="1.1" height="15.0" fill="rgb(206,124,5)" rx="2" ry="2" />
<text  x="29.69" y="127.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::EvaluateAsInitializer (3,688 samples, 5.92%)</title><rect x="10.0" y="213" width="69.8" height="15.0" fill="rgb(230,142,43)" rx="2" ry="2" />
<text  x="13.00" y="223.5" >clang-1..</text>
</g>
<g >
<title>clang-10!HandleLValueArrayAdjustment (518 samples, 0.83%)</title><rect x="18.8" y="149" width="9.8" height="15.0" fill="rgb(209,208,49)" rx="2" ry="2" />
<text  x="21.78" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (48 samples, 0.08%)</title><rect x="566.8" y="117" width="0.9" height="15.0" fill="rgb(219,84,14)" rx="2" ry="2" />
<text  x="569.78" y="127.5" ></text>
</g>
<g >
<title>clang-10!llvm::APInt::sextOrTrunc (8 samples, 0.01%)</title><rect x="26.5" y="117" width="0.2" height="15.0" fill="rgb(221,217,49)" rx="2" ry="2" />
<text  x="29.54" y="127.5" ></text>
</g>
<g >
<title>clang-10!llvm::APInt::sextOrTrunc (12 samples, 0.02%)</title><rect x="28.4" y="101" width="0.2" height="15.0" fill="rgb(247,40,38)" rx="2" ry="2" />
<text  x="31.36" y="111.5" ></text>
</g>
<g >
<title>clang-10!TryListInitialization (12,657 samples, 20.30%)</title><rect x="288.2" y="229" width="239.6" height="15.0" fill="rgb(212,19,46)" rx="2" ry="2" />
<text  x="291.21" y="239.5" >clang-10!TryListInitialization</text>
</g>
<g >
<title>clang-10!clang::Parser::ParseTopLevelDecl (58,652 samples, 94.07%)</title><rect x="79.8" y="357" width="1110.0" height="15.0" fill="rgb(247,100,21)" rx="2" ry="2" />
<text  x="82.79" y="367.5" >clang-10!clang::Parser::ParseTopLevelDecl</text>
</g>
<g >
<title>clang-10!clang::Sema::PerformImplicitConversion (4,262 samples, 6.84%)</title><rect x="871.2" y="133" width="80.7" height="15.0" fill="rgb(212,170,10)" rx="2" ry="2" />
<text  x="874.21" y="143.5" >clang-10!..</text>
</g>
<g >
<title>clang-10!clang::Lexer::getCharAndSize (16 samples, 0.03%)</title><rect x="232.1" y="197" width="0.3" height="15.0" fill="rgb(210,28,47)" rx="2" ry="2" />
<text  x="235.08" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::StandardConversionSequence::getNarrowingKind (660 samples, 1.06%)</title><rect x="1016.3" y="133" width="12.5" height="15.0" fill="rgb(213,88,19)" rx="2" ry="2" />
<text  x="1019.29" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseFirstTopLevelDecl (58,652 samples, 94.07%)</title><rect x="79.8" y="373" width="1110.0" height="15.0" fill="rgb(249,225,10)" rx="2" ry="2" />
<text  x="82.79" y="383.5" >clang-10!clang::Parser::ParseFirstTopLevelDecl</text>
</g>
<g >
<title>clang-10!getAssignmentAction (8 samples, 0.01%)</title><rect x="541.5" y="149" width="0.1" height="15.0" fill="rgb(252,72,2)" rx="2" ry="2" />
<text  x="544.46" y="159.5" ></text>
</g>
<g >
<title>clang-10!llvm::APInt::compareSigned (112 samples, 0.18%)</title><rect x="520.6" y="149" width="2.1" height="15.0" fill="rgb(206,77,38)" rx="2" ry="2" />
<text  x="523.58" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::Stmt::getBeginLoc (16 samples, 0.03%)</title><rect x="300.3" y="133" width="0.3" height="15.0" fill="rgb(205,164,29)" rx="2" ry="2" />
<text  x="303.32" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::IntExprEvaluator, bool&gt;::Visit.part.2477 (12 samples, 0.02%)</title><rect x="10.2" y="149" width="0.3" height="15.0" fill="rgb(248,90,23)" rx="2" ry="2" />
<text  x="13.23" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::ArrayExprEvaluator, bool&gt;::Visit (3,688 samples, 5.92%)</title><rect x="10.0" y="181" width="69.8" height="15.0" fill="rgb(221,7,13)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >clang-1..</text>
</g>
<g >
<title>clang-10!Evaluate (300 samples, 0.48%)</title><rect x="11.6" y="133" width="5.7" height="15.0" fill="rgb(248,31,34)" rx="2" ry="2" />
<text  x="14.59" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Expr::getExprLoc (12 samples, 0.02%)</title><rect x="10.0" y="149" width="0.2" height="15.0" fill="rgb(224,146,18)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::getAsArrayType (184 samples, 0.30%)</title><rect x="664.2" y="133" width="3.5" height="15.0" fill="rgb(208,7,17)" rx="2" ry="2" />
<text  x="667.21" y="143.5" ></text>
</g>
<g >
<title>clang-10!clang::Preprocessor::Lex (924 samples, 1.48%)</title><rect x="125.1" y="197" width="17.5" height="15.0" fill="rgb(212,185,23)" rx="2" ry="2" />
<text  x="128.07" y="207.5" ></text>
</g>
<g >
<title>clang-10!clang::Parser::ParseCastExpression (4,726 samples, 7.58%)</title><rect x="99.1" y="229" width="89.4" height="15.0" fill="rgb(252,52,30)" rx="2" ry="2" />
<text  x="102.11" y="239.5" >clang-10!c..</text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckArrayType (30,130 samples, 48.32%)</title><rect x="527.8" y="181" width="570.2" height="15.0" fill="rgb(236,104,9)" rx="2" ry="2" />
<text  x="530.75" y="191.5" >clang-10!(anonymous namespace)::InitListChecker::CheckArrayType</text>
</g>
<g >
<title>clang-10!clang::Sema::checkInitializerLifetime (3,404 samples, 5.46%)</title><rect x="951.9" y="133" width="64.4" height="15.0" fill="rgb(230,65,1)" rx="2" ry="2" />
<text  x="954.87" y="143.5" >clang-1..</text>
</g>
<g >
<title>clang-10!clang::Sema::IsQualificationConversion (1,184 samples, 1.90%)</title><rect x="451.4" y="69" width="22.4" height="15.0" fill="rgb(205,212,1)" rx="2" ry="2" />
<text  x="454.39" y="79.5" >c..</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::AddConversionSequenceStep (1,952 samples, 3.13%)</title><rect x="669.2" y="133" width="36.9" height="15.0" fill="rgb(233,191,33)" rx="2" ry="2" />
<text  x="672.20" y="143.5" >cla..</text>
</g>
<g >
<title>clang-10!clang::Stmt::children (12 samples, 0.02%)</title><rect x="260.1" y="213" width="0.2" height="15.0" fill="rgb(241,95,42)" rx="2" ry="2" />
<text  x="263.05" y="223.5" ></text>
</g>
<g >
<title>clang-10!clang::Sema::TryImplicitConversion (4,126 samples, 6.62%)</title><rect x="405.4" y="117" width="78.1" height="15.0" fill="rgb(237,101,30)" rx="2" ry="2" />
<text  x="408.40" y="127.5" >clang-10!..</text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (12 samples, 0.02%)</title><rect x="1162.8" y="181" width="0.2" height="15.0" fill="rgb(241,153,12)" rx="2" ry="2" />
<text  x="1165.78" y="191.5" ></text>
</g>
<g >
<title>libc.so.6!__memset_avx2_unaligned (192 samples, 0.31%)</title><rect x="599.3" y="117" width="3.7" height="15.0" fill="rgb(230,166,48)" rx="2" ry="2" />
<text  x="602.33" y="127.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::IntExprEvaluator::Success.isra.1498 (168 samples, 0.27%)</title><rect x="13.9" y="101" width="3.1" height="15.0" fill="rgb(222,201,37)" rx="2" ry="2" />
<text  x="16.86" y="111.5" ></text>
</g>
<g >
<title>clang-10!clang::ASTContext::getTypeInfo (96 samples, 0.15%)</title><rect x="24.5" y="53" width="1.8" height="15.0" fill="rgb(234,159,44)" rx="2" ry="2" />
<text  x="27.50" y="63.5" ></text>
</g>
<g >
<title>clang-10!clang::Lexer::LexTokenInternal (28 samples, 0.04%)</title><rect x="95.5" y="229" width="0.5" height="15.0" fill="rgb(213,143,50)" rx="2" ry="2" />
<text  x="98.48" y="239.5" ></text>
</g>
<g >
<title>clang-10!(anonymous namespace)::InitListChecker::CheckArrayType (12,657 samples, 20.30%)</title><rect x="288.2" y="165" width="239.6" height="15.0" fill="rgb(220,151,48)" rx="2" ry="2" />
<text  x="291.21" y="175.5" >clang-10!(anonymous namespace):..</text>
</g>
<g >
<title>clang-10!clang::InitializationSequence::InitializationSequence (396 samples, 0.64%)</title><rect x="608.9" y="149" width="7.5" height="15.0" fill="rgb(236,154,10)" rx="2" ry="2" />
<text  x="611.95" y="159.5" ></text>
</g>
<g >
<title>[Unknown]![Unknown stack frame(s)] (88 samples, 0.14%)</title><rect x="203.0" y="229" width="1.7" height="15.0" fill="rgb(243,83,10)" rx="2" ry="2" />
<text  x="206.01" y="239.5" ></text>
</g>
<g >
<title>clang-10!clang::QualType::getUnqualifiedType (620 samples, 0.99%)</title><rect x="462.1" y="53" width="11.7" height="15.0" fill="rgb(238,215,7)" rx="2" ry="2" />
<text  x="465.06" y="63.5" ></text>
</g>
</g>
</svg>
